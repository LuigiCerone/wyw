version: '3.7'

## BASE MICROSERVICE
x-tomcat: &tomcat
  image: tomcat:jdk8
  restart: unless-stopped
  ports:
    - "4000-4100:8080"
#  volumes:
#    # difference?! exploded seems more speedy
#    - ./target/pollweb.war:/usr/local/tomcat/webapps/sose-1920.war
#    - ./microservices/person/target/sose:/usr/local/tomcat/webapps/sose
#  environment:
#    # env parameters for java app (not used for now)
#    JDBC_URL: jdbc:mysql://mariadb:3306/sosedb?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true
#    JDBC_USER: sose
#    JDBC_PASS: sose

x-mariadb: &mariadb
  image: mariadb:10.5.1
  restart: unless-stopped
  environment:
    MYSQL_ROOT_PASSWORD: sose
    # or set more detailed access policy in docker/db-init.sql
    MYSQL_DATABASE: sosedb
    MYSQL_USER: sose
    MYSQL_PASSWORD: sose

## SERVICES DEFINITION
services:

  # PERSON MS (inherit from base microservice)
  person-ws:
    <<: *tomcat
    depends_on:
      - person-db
    volumes:
      - ./microservices/person/target/sose:/usr/local/tomcat/webapps/sose
    networks:
      - microservices
      - person

  person-db:
    <<: *mariadb
    volumes:
      # only naming/label volume ("docker-compose down -v" to erase)
      - person-db-data:/var/lib/mysql
      # executing only on create container (first "docker-compose up")
      - ./microservices/person/docker/db-init.sql:/docker-entrypoint-initdb.d/db-init.sql
    networks:
      - person

  hello-ws:
    <<: *tomcat
    volumes:
      - ./microservices/hello-rest/target/sose:/usr/local/tomcat/webapps/sose
    environment:
      EUREKA_SERVER_URI: 'eureka-registry'
      EUREKA_SERVER_PORT: '8080'
      EUREKA_BASE_PATH: '/sose'
    networks:
      - microservices

  film-ws:
    <<: *tomcat
    depends_on:
      - film-db
    volumes:
      - ./microservices/film/target/sose:/usr/local/tomcat/webapps/ROOT
    environment:
      EUREKA_SERVER_URI: 'eureka-registry'
      EUREKA_SERVER_PORT: '8080'
      EUREKA_BASE_PATH: '/sose'
    networks:
      - microservices

  film-db:
    <<: *mariadb
    volumes:
      # only naming/label volume ("docker-compose down -v" to erase)
      - film-db-data:/var/lib/mysql
      # executing only on create container (first "docker-compose up")
      - ./microservices/film/db/db-init.sql:/docker-entrypoint-initdb.d/db-init.sql
    networks:
      - microservices

  user-ws:
    <<: *tomcat
    volumes:
      - ./microservices/user/target/sose:/usr/local/tomcat/webapps/ROOT
    environment:
      EUREKA_SERVER_URI: 'eureka-registry'
      EUREKA_SERVER_PORT: '8080'
      EUREKA_BASE_PATH: '/sose'
    networks:
      - microservices

  hello-ws-client:
    <<: *tomcat
    volumes:
      - ./microservices/hello-rest-client/target/sose:/usr/local/tomcat/webapps/sose
    environment:
      EUREKA_SERVER_URI: 'eureka-registry'
      EUREKA_SERVER_PORT: '8080'
      EUREKA_BASE_PATH: '/sose'
    networks:
      - microservices

  eureka-registry:
    <<: *tomcat
    ports:
      - "8761:8080"
    volumes:
      - ./microservices/eureka-registry/target/sose:/usr/local/tomcat/webapps/sose
    environment:
      HOSTNAME: 'eureka-registry'
    networks:
      - microservices

  zuul-proxy:
    <<: *tomcat
    ports:
      - "8762:8080"
    volumes:
      - ./microservices/zuul/target/sose:/usr/local/tomcat/webapps/ROOT
    environment:
      EUREKA_SERVER_URI: 'eureka-registry'
      EUREKA_SERVER_PORT: '8080'
      EUREKA_BASE_PATH: '/sose'
    networks:
      - microservices

  adminer:
    # use for disable any service
    #build: './utils/docker-disable'
    #image: disable:1.0
    container_name: sose-adminer
    image: adminer:4.7.6
    restart: unless-stopped
    environment:
      # https://www.adminer.org/en/plugins/
      ADMINER_PLUGINS: 'file-upload tinymce'
      ADMINER_DEFAULT_SERVER: 'person-db'
    ports:
      - "5000:8080"
    networks:
      - person
      - microservices


networks:
  person:
  microservices:

volumes:
  person-db-data:
  film-db-data: